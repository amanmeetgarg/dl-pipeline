{
  "Parameters": {
    "CIDRRange": {
      "Description": "VPCCIDR Range (will be a /16 block)",
      "Type": "String",
      "Default": "10.0.0.0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})"
    },
    "ResourcePrefix": {
      "Description": "Prefix used for all resources in stack",
      "Type": "String",
      "Default": "DLPipeline"
    },
    "AllowedIP": {
      "Description": "Whitelisted CIDR block for security group (must be of the form x.x.x.x)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x"
    },
    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "Can contain only ASCII characters."
    },  
    "InstanceType": {
      "Description": "Instance type to use for web service (add additional as desired - additions may require additional AMI entries)",
      "Type": "String",
      "Default": "t2.xlarge",
      "AllowedValues" : [ "t2.micro", "t2.small", "t2.medium", "t2.large", "t2.xlarge" ],
      "ConstraintDescription" : "Must be a valid EC2 instance type"
    },
    "Owner": {
      "Description": "Your Name",
      "Type": "String"
    }
  },
  "Mappings": {
    "VPCRanges": {
      "10.0.0.0": {
        "PublicSubnet"   : "10.0.1.0/24"
      }
    },
    "AWSRegion2AMI" : {
      "us-east-1" : {"Xenial": "ami-1d4e7a66"},
      "us-west-2" : {"Xenial": "ami-8803e0f0"},
      "us-west-1" : {"Xenial": "ami-969ab1f6"}
    }
  },
  "Resources": {
    "VPCBase": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Fn::Join" : ["", [{ "Ref" : "CIDRRange" }, "/16"]] },
        "EnableDnsSupport": "True",
        "EnableDnsHostnames": "True",
        "Tags": [
          { "Key": "Name", "Value":    { "Fn::Join" : ["", [{ "Ref" : "ResourcePrefix" }, "-VPC"]] } },
          { "Key": "Owner", "Value":  { "Ref" : "Owner" } }
        ]
      }
    },
    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable inbound network access access to EC2 instance.",
        "VpcId": { "Ref": "VPCBase" },
        "SecurityGroupIngress": [
          {"IpProtocol": "tcp", "ToPort": "80", "FromPort": "80", "CidrIp": { "Fn::Join" : [ "", [{"Ref": "AllowedIP"}, "/32"]] }},
          {"IpProtocol": "tcp", "ToPort": "22", "FromPort": "22", "CidrIp": { "Fn::Join" : [ "", [{"Ref": "AllowedIP"}, "/32"]] }}
        ],
        "Tags" : [
          { "Key": "Name", "Value": { "Fn::Join" : ["", [{ "Ref" : "ResourcePrefix" }, "-SG"]] } },
          { "Key": "Owner", "Value":  { "Ref" : "Owner" } }
        ]
      }
    },
    "PublicSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": { "Fn::Select": [ "0", { "Fn::GetAZs": { "Ref": "AWS::Region" } } ] },
        "CidrBlock": { "Fn::FindInMap" : [ "VPCRanges", { "Ref": "CIDRRange"}, "PublicSubnet"] },
        "MapPublicIpOnLaunch": "True",
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Join" : ["", [{ "Ref" : "ResourcePrefix" }, "-PublicSubnet"]] } },
          { "Key": "Owner", "Value":  { "Ref" : "Owner" } }
        ],
        "VpcId": { "Ref": "VPCBase" }
      }
    },
    "IGWBase" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key": "Name", "Value": { "Fn::Join" : ["", [{ "Ref" : "ResourcePrefix" }, "-IGW"]] } },
          { "Key": "Owner", "Value":  { "Ref" : "Owner" } }
        ]
      }
    },
    "VGAIGWBase" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "InternetGatewayId" : { "Ref" : "IGWBase" },
        "VpcId" : { "Ref" : "VPCBase" }
      }
    },
    "RouteTablePublic" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPCBase" },
        "Tags" : [
          { "Key": "Name", "Value": { "Fn::Join" : ["", [{ "Ref" : "ResourcePrefix" }, "-PublicRT"]] } },
          { "Key": "Owner", "Value":  { "Ref" : "Owner" } }
        ]
      }
    },
    "RoutePublicDefault" : {
      "DependsOn": [ "VGAIGWBase" ],
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteTablePublic" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "IGWBase" }
      }
    },
    "RouteAssociationPublicDefault" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet"},
        "RouteTableId" : { "Ref" : "RouteTablePublic" }
      }
    },
    "WebServerRole" : {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": {
              "Service": [ "ec2.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          } ]
        },
        "Path": "/",
        "Policies": [ {
          "PolicyName": "S3Access",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [ {
              "Effect": "Allow",
              "Action": "s3:*",
              "Resource": "*"
            } ]
          }
        } ]
      }
    },
    "WebServerInstanceProfile" : {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ {
          "Ref": "WebServerRole"
        } ]
      }
    },
    "WebServer" : {
      "Type" : "AWS::EC2::Instance",
     "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegion2AMI", { "Ref" : "AWS::Region" }, "Xenial"]},
        "InstanceType" : {"Ref": "InstanceType"},
        "SecurityGroupIds": [ {"Ref" : "InstanceSecurityGroup"} ],
        "KeyName" : {"Ref": "KeyName"},
        "SubnetId" : {"Ref": "PublicSubnet"},
        "IamInstanceProfile": {"Ref": "WebServerInstanceProfile"},
        "UserData": {
          "Fn::Base64": { "Fn::Join":["", [
            "#!/bin/bash -ex\n",
            "apt-get -y update\n",
            "apt-get -y install apache2 libapache2-mod-wsgi python python-pip\n",
            "pip install flask pandas h5py tensorflow keras\n",
            "pip install http://download.pytorch.org/whl/cu75/torch-0.2.0.post1-cp27-cp27mu-manylinux1_x86_64.whl\n",
            "pip install torchvision"
          ]]}
        },
        "Tags" : [
          { "Key": "Name", "Value": { "Fn::Join" : ["", [{ "Ref" : "ResourcePrefix" }, "-EC2"]] } },
          { "Key": "Owner", "Value":  { "Ref" : "Owner" } }
        ]

      }
    }
  },
  "Outputs": {
    "VPCID" : { "Value" : { "Ref" : "VPCBase" } },
    "PublicSubnet" : { "Value" : { "Ref" : "PublicSubnet"} },
    "DefaultSG" : { "Value" : { "Fn::GetAtt" : ["VPCBase", "DefaultSecurityGroup"] }}
  }
}
